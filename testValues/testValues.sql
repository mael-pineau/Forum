INSERT INTO `user` (`id`, `mail`, `username`, `password`, `image`, `is_admin`) VALUES
(3, 'admin@gmail.com', 'admin', '9ef0b2d0b3fc07b37f5b3f2114fe62d18e5c34cdf1124433fe8ad1c509368e99', 'dr-stone-senku-ishigami-kohaku-uhdpaper.com-4K-2.jpg', 1),
(4, 'beaudoin@gmail.com', 'lance', '9ef0b2d0b3fc07b37f5b3f2114fe62d18e5c34cdf1124433fe8ad1c509368e99', 'default.png', 0),
(5, 'thcoder@gmail.com', 'TheCodeur', '9ef0b2d0b3fc07b37f5b3f2114fe62d18e5c34cdf1124433fe8ad1c509368e99', '649533.png', 0),
(6, 'Chabot@gmail.com', 'nicolas', '9ef0b2d0b3fc07b37f5b3f2114fe62d18e5c34cdf1124433fe8ad1c509368e99', '144565.jpg', 0),
(7, 'hacker@gmail.com', 'hacker', '9ef0b2d0b3fc07b37f5b3f2114fe62d18e5c34cdf1124433fe8ad1c509368e99', 'Niveau-solo-Saison-2-Date-de-sortie-distribution-intrigue-et-758x426.jpg', 0),
(9, 'Labrosse@gmail.com', 'Armand', '9ef0b2d0b3fc07b37f5b3f2114fe62d18e5c34cdf1124433fe8ad1c509368e99', '596859.jpg', 0);


INSERT INTO `subject` (`id`, `user_id`, `title`, `description`, `date`, `is_closed`) VALUES
(2, 4, 'Comment je peux empêcher l\'injection SQL en PHP ?', '&lt;div&gt;Si une entr&eacute;e utilisateur est ins&eacute;r&eacute;e sans modification dans une requ&ecirc;te SQL, l&#039;application devient vuln&eacute;rable &agrave; l&#039;injection SQL, comme dans l&#039;exemple suivant :&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;pre&gt;$unsafe_variable = $_POST[&#039;user_input&#039;] ;\r\n&lt;br&gt;mysql_query(&quot;INSERT INTO table (column) VALUES (&#039;$unsafe_variable&#039;)&quot;);&lt;/pre&gt;&lt;div&gt;C&#039;est parce que l&#039;utilisateur peut entrer quelque chose comme :&lt;/div&gt;&lt;pre&gt;value&#039;); DROP TABLE table;--, &lt;/pre&gt;&lt;div&gt;et la requ&ecirc;te devient :&amp;nbsp;&lt;/div&gt;&lt;pre&gt;INSERT INTO table (column) VALUES(&#039;value&#039;); DROP TABLE tableau ;--&#039;) &lt;/pre&gt;&lt;div&gt;&lt;br&gt;Que peut-on faire pour emp&ecirc;cher que cela se produise ?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;', 1653227953, 1),
(3, 6, 'Comment comparer des chaînes en Java ?', '&lt;div&gt;J&#039;ai utilis&eacute; l&#039;op&eacute;rateur == dans mon programme pour comparer toutes mes cha&icirc;nes jusqu&#039;&agrave; pr&eacute;sent. Cependant, j&#039;ai rencontr&eacute; un bug, j&#039;en ai chang&eacute; un en&lt;/div&gt;&lt;pre&gt; .equals() &lt;/pre&gt;&lt;div&gt;&agrave; la place, et cela a corrig&eacute; le bug. Est-ce que == est une mauvaise solution ? Quand est-ce que l&#039;on ne doit-il pas &ecirc;tre utilis&eacute; ? Quelle est la diff&eacute;rence?&lt;/div&gt;', 1653228754, 1),
(4, NULL, 'Suppression de compte', '&lt;div&gt;je voulais savoir comment faire pour supprimer mon compte merci&lt;/div&gt;', 1653229491, 1),
(5, 4, 'Comment corriger l\'erreur \"En-têtes déjà envoyés\" en PHP', '&lt;div&gt;Lors de l&#039;ex&eacute;cution de mon script, j&#039;obtiens plusieurs erreurs comme celle-ci :&amp;nbsp;&lt;br&gt;Avertissement : Impossible de modifier les informations d&#039;en-t&ecirc;te - les en-t&ecirc;tes ont d&eacute;j&agrave; &eacute;t&eacute; envoy&eacute;s par (la sortie a commenc&eacute; &agrave; /some/file.php:12) dans /some/file.php &agrave; la ligne 23 Les lignes mentionn&eacute;es dans les messages d&#039;erreur contiennent des appels header() et setcookie().&lt;br&gt;&lt;br&gt;&amp;nbsp;Quelle pourrait &ecirc;tre la raison de cela? Et comment y rem&eacute;dier ?&lt;/div&gt;', 1653229759, 0),
(6, 9, 'Comment obtenir des v-bucks sur Fortnite', '&lt;div&gt;Je cherche un moyen d&#039;obtenir des v-Bucks de la mani&egrave;re la plus rapide qui soit&lt;/div&gt;', 1653230316, 0);

INSERT INTO `comment` (`id`, `subject_id`, `user_id`, `message`, `date`) VALUES
(1, 2, 5, '&lt;div&gt;La bonne fa&ccedil;on d&#039;&eacute;viter les attaques par injection SQL, quelle que soit la base de donn&eacute;es que vous utilisez, est de s&eacute;parer les donn&eacute;es de SQL, afin que les donn&eacute;es restent des donn&eacute;es et ne soient jamais interpr&eacute;t&eacute;es comme des commandes par l&#039;analyseur SQL. Il est possible de cr&eacute;er une instruction SQL avec des parties de donn&eacute;es correctement format&eacute;es, mais si vous ne comprenez pas parfaitement les d&eacute;tails, vous devez toujours utiliser des instructions pr&eacute;par&eacute;es et des requ&ecirc;tes param&eacute;tr&eacute;es. Il s&#039;agit d&#039;instructions SQL qui sont envoy&eacute;es et analys&eacute;es par le serveur de base de donn&eacute;es s&eacute;par&eacute;ment de tous les param&egrave;tres. De cette fa&ccedil;on, il est impossible pour un attaquant d&#039;injecter du code SQL malveillant.&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;Utilisation de PDO (pour tout pilote de base de donn&eacute;es pris en charge) :&lt;br&gt;&lt;br&gt;&amp;nbsp;$stmt = $pdo-&amp;gt;prepare(&#039;SELECT * FROM employ&eacute;s WHERE nom = :nom&#039;);&lt;br&gt;&amp;nbsp;$stmt-&amp;gt;execute([ &#039;nom&#039; =&amp;gt; $nom ]);&amp;nbsp;&lt;br&gt;&lt;br&gt;foreach ($stmt as $row) {&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Faire quelque chose avec $row&amp;nbsp;&lt;br&gt;}&amp;nbsp;&lt;br&gt;&lt;br&gt;PDO est l&#039;option universelle.&lt;br&gt;&lt;br&gt;&lt;/div&gt;', 1653228134),
(2, 2, 4, '&lt;div&gt;ok merci beaucoup je comprend mieux. Ou-est-ce que je peux regarder &ccedil;a plus en detail?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;', 1653228276),
(3, 2, 5, '&lt;div&gt;tu peux tout regarder ici : &lt;a href=&quot;https://www.php.net/manual/fr/book.pdo.php&quot;&gt;https://www.php.net/manual/fr/book.pdo.php&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;', 1653228333),
(4, 3, 5, '&lt;div&gt;== teste l&#039;&eacute;galit&eacute; des r&eacute;f&eacute;rences (s&#039;il s&#039;agit du m&ecirc;me objet).&amp;nbsp;&lt;br&gt;&lt;br&gt;.equals() teste l&#039;&eacute;galit&eacute; des valeurs (si elles sont logiquement &quot;&eacute;gales&quot;).&lt;br&gt;&lt;br&gt;&amp;nbsp;Objects.equals() v&eacute;rifie la valeur null avant d&#039;appeler .equals() afin que vous n&#039;ayez pas &agrave; le faire (disponible &agrave; partir de JDK7, &eacute;galement disponible dans Guava).&lt;br&gt;&lt;br&gt;&amp;nbsp;Par cons&eacute;quent, si vous voulez tester si deux cha&icirc;nes ont la m&ecirc;me valeur, vous voudrez probablement utiliser Objects.equals().&amp;nbsp;&lt;br&gt;&lt;br&gt;// Ces deux ont la m&ecirc;me valeur&lt;/div&gt;&lt;pre&gt; new String(&quot;test&quot;).equals(&quot;test&quot;) // --&amp;gt; vrai &lt;/pre&gt;&lt;div&gt;&lt;br&gt;// ... mais ce ne sont pas les m&ecirc;mes objets&lt;/div&gt;&lt;pre&gt; nouvelle cha&icirc;ne (&quot;test&quot;) == &quot;test&quot; // --&amp;gt; faux &lt;/pre&gt;&lt;div&gt;&lt;br&gt;// ... ce ne sont pas non plus&lt;/div&gt;&lt;pre&gt; nouvelle cha&icirc;ne (&quot;test&quot;) == nouvelle cha&icirc;ne (&quot;test&quot;) // --&amp;gt; faux &lt;/pre&gt;&lt;div&gt;&lt;br&gt;// ... mais c&#039;est parce que les litt&eacute;raux sont intern&eacute;s par&amp;nbsp;&lt;br&gt;// le compilateur et donc faire r&eacute;f&eacute;rence au m&ecirc;me objet&lt;/div&gt;&lt;pre&gt; &quot;tester&quot; == &quot;tester&quot; // --&amp;gt; vrai&lt;/pre&gt;&lt;div&gt;&lt;br&gt;&amp;nbsp;// ... les litt&eacute;raux de cha&icirc;ne sont concat&eacute;n&eacute;s par le compilateur&lt;br&gt;&amp;nbsp;// et les r&eacute;sultats sont intern&eacute;s.&amp;nbsp;&lt;/div&gt;&lt;pre&gt;&quot;test&quot; == &quot;te&quot; + &quot;st&quot; // --&amp;gt; vrai &lt;/pre&gt;&lt;div&gt;&lt;br&gt;// ... mais vous devriez vraiment appeler Objects.equals()&amp;nbsp;&lt;/div&gt;&lt;pre&gt;Objects.equals(&quot;test&quot;, new String(&quot;test&quot;)) // --&amp;gt; vrai\r\nObjects.equals(null, &quot;test&quot;) // --&amp;gt; false\r\nObjects.equals(null, null) // --&amp;gt; vrai &lt;/pre&gt;&lt;div&gt;&lt;br&gt;Vous voulez presque toujours utiliser Objects.equals(). Dans les rares cas o&ugrave; vous savez que vous avez affaire &agrave; des cha&icirc;nes internes, vous pouvez utiliser ==.&lt;/div&gt;', 1653229039),
(5, 3, 7, '&lt;div&gt;Oui, == est mauvais pour comparer des cha&icirc;nes (tous les objets vraiment, sauf si vous savez qu&#039;ils sont canoniques). == compare simplement les r&eacute;f&eacute;rences d&#039;objet. .equals() teste l&#039;&eacute;galit&eacute;. Pour les cha&icirc;nes, elles seront souvent les m&ecirc;mes, mais comme vous l&#039;avez d&eacute;couvert, ce n&#039;est pas toujours garanti.&lt;/div&gt;', 1653229193),
(6, 3, 6, '&lt;div&gt;merci pour vos r&eacute;ponse, j&#039;ai bien compris la diff&eacute;rence maintenant. A plus tard!&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;', 1653229310),
(7, 4, 3, '&lt;div&gt;Il te suffit d&#039;aller sur ton profil en haut a droite puis de clicquer sur &quot;modifier mon profil&quot;, puis tu verras un bouton pour le supprimer&amp;nbsp;&lt;/div&gt;', 1653229570),
(8, 4, NULL, '&lt;div&gt;Merci beaucoup&lt;/div&gt;', 1653229608);

INSERT INTO `ban` (`id`, `user_id`, `date`, `is_permanent`, `reason`, `date_deban`) VALUES
(1, 9, 1653230370, 1, '&lt;div&gt;sujet inappropri&eacute;&lt;/div&gt;', 0);



INSERT INTO `form_deban` (`id`, `user_id`, `ban_id`, `message`, `date`, `is_refused`) VALUES
(1, 9, 1, '&lt;div&gt;De toute fa&ccedil;on Apex Legends c&#039;est mieux&lt;/div&gt;', 1653230434, NULL);


